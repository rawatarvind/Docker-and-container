There are two way to write the docker file.
1 manual ( imperative)
2 automatic ( Declarative )

# How to write Docker file 
Below are the docker parameters.

1. From: it always contains base image reference to building a new image.
2. Run: What command you want to execute to provision new images.
3. Add: You want to copy some files into image. Can download content from internet.
4. COPY: copy also do same thing like ADD Parameter.Can't download from internet. Only copy from localhost.
5. Expose: To set default container port to access your application.
6. WORKDIR: To change the present working directory when login to container first time.
7. ENV: To store the variable inside the docker file and its limited to docker file only.
8. CMD: Any process/service daemon which you want to provision the container. we can use multiple time in a single file. If defining multiple time it executes last one.
9. ENTERPOINT: it is basically to execute shell file on create/booting time of container.Can't call multiple times.
10. MAINTAINER: Optional parameter (Email, autor name and Department)
11. USER: Default conatiner namespace ownership user and login user also when access container.
Note: If using CMD and Entrypoint both, entrypoint will have priority.

# mkdir test
# cd test
# echo hellword > run.sh
# vim Dockerfile

FORM centos:7
MAINTAINER arvindrawat
RUN yum install httpd -y
ADD https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm /tmp
COPY run.sh /tmp

:wq

# docker build -t centos:apache
# docker images
# docker run -itd --name=demo centos:apache

To decrease command history , use below format for RUN parameter.

FROM centos:7
ENV  a 10
RUN echo $a > /var/tmp/abc
ENTERPOINT "abc.sh"
MAINTAINER ARVIND RAWAT
RUN yum install httpd -y && echo "helloworld" > /tmp/report && data && cal \
WORKDIR /var/www/html
COPY ./src/ && run.sh /tmp
RUN 'sed -i "s/Listen 8080/Listen 8080/g" /etc/httpd/conf/httpd.conf \
 && chown -R apache:root /var/log/httpd /var/run/httpd \
 && chmod -R 777 /var/log/httpd /var/run/httpd
EXPOSE 8080
USER apache
ADD https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm /tmp
CMD ["/usr/sbin/httpd", "-D", "FORGROUND"] [we can not provision container with -d option without this parameter
you need to -it option]
VOLUME /volume

:wq!

# docker build -t apache:latest
# docker run -d -p  --name=web apache:latest
# docker exec -it web /bin/bash

bash-4.2$ whoami
bash-4.2$ pwd
bash-4.2$ cat /var/tmp/abc
bash-4.2$ ls
bash-4.2$ curl 127.0.0.1:8080
bash-4.2$ exit

# docker ps
# docker volume ls
# ls /var/lib/docker/volume



